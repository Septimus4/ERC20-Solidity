{
	"id": "f7526972a3eb005c083c4bb38021f457",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethers-waffle-workshops/contracts/WaffleToken.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract WaffleToken is IERC20 {\n    string public constant name = \"WaffleToken\";\n    string public constant symbol = \"WFL\";\n    uint8 public constant decimals = 18;\n\n    mapping(address => uint) balances;\n\n    constructor(uint _initialBalance) {\n\n    }\n\n    function totalSupply() external view override returns (uint256) {\n        revert('Not Implemented');\n    }\n\n    function balanceOf(address account) external view override returns (uint256) {\n        revert('Not Implemented');\n    }\n\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        revert('Not Implemented');\n    }\n    \n    \n    // Part 2\n    \n\n    function allowance(address owner, address spender) external override view returns (uint256) {\n        revert('Not Implemented');\n    }\n\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        revert('Not Implemented');\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        revert('Not Implemented');\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ethers-waffle-workshops/contracts/WaffleToken.sol": {
				"WaffleToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialBalance",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":83:1164  contract WaffleToken is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":294:336  constructor(uint _initialBalance) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n  pop\n    /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":83:1164  contract WaffleToken is IERC20 {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:671   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:665   */\n  dup2\n    /* \"#utility.yul\":649:665   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":800:917   */\ntag_15:\n    /* \"#utility.yul\":909:910   */\n  0x00\n    /* \"#utility.yul\":906:907   */\n  dup1\n    /* \"#utility.yul\":899:911   */\n  revert\n    /* \"#utility.yul\":923:1045   */\ntag_11:\n    /* \"#utility.yul\":996:1020   */\n  tag_25\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_26:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":83:1164  contract WaffleToken is IERC20 {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":83:1164  contract WaffleToken is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":120:163  string public constant name = \"WaffleToken\" */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":882:1007  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":342:448  function totalSupply() external view override returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":1013:1161  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":212:247  uint8 public constant decimals = 18 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":454:573  function balanceOf(address account) external view override returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":169:206  string public constant symbol = \"WFL\" */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":579:707  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":742:876  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":120:163  string public constant name = \"WaffleToken\" */\n    tag_14:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x576166666c65546f6b656e000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":882:1007  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_20:\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":959:963  bool */\n      0x00\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":975:1000  revert('Not Implemented') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":342:448  function totalSupply() external view override returns (uint256) {... */\n    tag_24:\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":397:404  uint256 */\n      0x00\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":416:441  revert('Not Implemented') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_55\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":1013:1161  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_30:\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":1113:1117  bool */\n      0x00\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":1129:1154  revert('Not Implemented') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_55\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":212:247  uint8 public constant decimals = 18 */\n    tag_33:\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":245:247  18 */\n      0x12\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":212:247  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":454:573  function balanceOf(address account) external view override returns (uint256) {... */\n    tag_39:\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":522:529  uint256 */\n      0x00\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":541:566  revert('Not Implemented') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_55\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":169:206  string public constant symbol = \"WFL\" */\n    tag_42:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x57464c0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":579:707  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_46:\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":659:663  bool */\n      0x00\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":675:700  revert('Not Implemented') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_55\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":742:876  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_51:\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":825:832  uint256 */\n      0x00\n        /* \"ethers-waffle-workshops/contracts/WaffleToken.sol\":844:869  revert('Not Implemented') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_55\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:146   */\n    tag_67:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_69\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_71:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_73\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_38:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":373:492   */\n    tag_76:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_79\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_67\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_50:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_82\n      tag_78\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":725:844   */\n    tag_81:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_83\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_67\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_84\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_67\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_29:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_87\n      tag_78\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1222:1341   */\n    tag_86:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_88\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_67\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_89\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_67\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_90\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_71\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_19:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_93\n      tag_78\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1830:1949   */\n    tag_92:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_94\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_67\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_95\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_71\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_96:\n        /* \"#utility.yul\":2298:2319   */\n      tag_98\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_100:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_102\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2503:2574   */\n      tag_104\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_106\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2660:2689   */\n      tag_108\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_110:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_112\n        /* \"#utility.yul\":2929:2931   */\n      0x0f\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_105\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_113\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3059:3061   */\n      0x20\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3192   */\n    tag_115:\n        /* \"#utility.yul\":3161:3185   */\n      tag_117\n        /* \"#utility.yul\":3179:3184   */\n      dup2\n        /* \"#utility.yul\":3161:3185   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3156:3159   */\n      dup3\n        /* \"#utility.yul\":3149:3186   */\n      mstore\n        /* \"#utility.yul\":3074:3192   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3198:3310   */\n    tag_119:\n        /* \"#utility.yul\":3281:3303   */\n      tag_121\n        /* \"#utility.yul\":3297:3302   */\n      dup2\n        /* \"#utility.yul\":3281:3303   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3276:3279   */\n      dup3\n        /* \"#utility.yul\":3269:3304   */\n      mstore\n        /* \"#utility.yul\":3198:3310   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3316:3526   */\n    tag_22:\n        /* \"#utility.yul\":3403:3407   */\n      0x00\n        /* \"#utility.yul\":3441:3443   */\n      0x20\n        /* \"#utility.yul\":3430:3439   */\n      dup3\n        /* \"#utility.yul\":3426:3444   */\n      add\n        /* \"#utility.yul\":3418:3444   */\n      swap1\n      pop\n        /* \"#utility.yul\":3454:3519   */\n      tag_124\n        /* \"#utility.yul\":3516:3517   */\n      0x00\n        /* \"#utility.yul\":3505:3514   */\n      dup4\n        /* \"#utility.yul\":3501:3518   */\n      add\n        /* \"#utility.yul\":3492:3498   */\n      dup5\n        /* \"#utility.yul\":3454:3519   */\n      tag_96\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3316:3526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3532:3845   */\n    tag_16:\n        /* \"#utility.yul\":3645:3649   */\n      0x00\n        /* \"#utility.yul\":3683:3685   */\n      0x20\n        /* \"#utility.yul\":3672:3681   */\n      dup3\n        /* \"#utility.yul\":3668:3686   */\n      add\n        /* \"#utility.yul\":3660:3686   */\n      swap1\n      pop\n        /* \"#utility.yul\":3732:3741   */\n      dup2\n        /* \"#utility.yul\":3726:3730   */\n      dup2\n        /* \"#utility.yul\":3722:3742   */\n      sub\n        /* \"#utility.yul\":3718:3719   */\n      0x00\n        /* \"#utility.yul\":3707:3716   */\n      dup4\n        /* \"#utility.yul\":3703:3720   */\n      add\n        /* \"#utility.yul\":3696:3743   */\n      mstore\n        /* \"#utility.yul\":3760:3838   */\n      tag_126\n        /* \"#utility.yul\":3833:3837   */\n      dup2\n        /* \"#utility.yul\":3824:3830   */\n      dup5\n        /* \"#utility.yul\":3760:3838   */\n      tag_100\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3752:3838   */\n      swap1\n      pop\n        /* \"#utility.yul\":3532:3845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3851:4270   */\n    tag_55:\n        /* \"#utility.yul\":4017:4021   */\n      0x00\n        /* \"#utility.yul\":4055:4057   */\n      0x20\n        /* \"#utility.yul\":4044:4053   */\n      dup3\n        /* \"#utility.yul\":4040:4058   */\n      add\n        /* \"#utility.yul\":4032:4058   */\n      swap1\n      pop\n        /* \"#utility.yul\":4104:4113   */\n      dup2\n        /* \"#utility.yul\":4098:4102   */\n      dup2\n        /* \"#utility.yul\":4094:4114   */\n      sub\n        /* \"#utility.yul\":4090:4091   */\n      0x00\n        /* \"#utility.yul\":4079:4088   */\n      dup4\n        /* \"#utility.yul\":4075:4092   */\n      add\n        /* \"#utility.yul\":4068:4115   */\n      mstore\n        /* \"#utility.yul\":4132:4263   */\n      tag_128\n        /* \"#utility.yul\":4258:4262   */\n      dup2\n        /* \"#utility.yul\":4132:4263   */\n      tag_110\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4124:4263   */\n      swap1\n      pop\n        /* \"#utility.yul\":3851:4270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4276:4498   */\n    tag_26:\n        /* \"#utility.yul\":4369:4373   */\n      0x00\n        /* \"#utility.yul\":4407:4409   */\n      0x20\n        /* \"#utility.yul\":4396:4405   */\n      dup3\n        /* \"#utility.yul\":4392:4410   */\n      add\n        /* \"#utility.yul\":4384:4410   */\n      swap1\n      pop\n        /* \"#utility.yul\":4420:4491   */\n      tag_130\n        /* \"#utility.yul\":4488:4489   */\n      0x00\n        /* \"#utility.yul\":4477:4486   */\n      dup4\n        /* \"#utility.yul\":4473:4490   */\n      add\n        /* \"#utility.yul\":4464:4470   */\n      dup5\n        /* \"#utility.yul\":4420:4491   */\n      tag_115\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4276:4498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4504:4718   */\n    tag_35:\n        /* \"#utility.yul\":4593:4597   */\n      0x00\n        /* \"#utility.yul\":4631:4633   */\n      0x20\n        /* \"#utility.yul\":4620:4629   */\n      dup3\n        /* \"#utility.yul\":4616:4634   */\n      add\n        /* \"#utility.yul\":4608:4634   */\n      swap1\n      pop\n        /* \"#utility.yul\":4644:4711   */\n      tag_132\n        /* \"#utility.yul\":4708:4709   */\n      0x00\n        /* \"#utility.yul\":4697:4706   */\n      dup4\n        /* \"#utility.yul\":4693:4710   */\n      add\n        /* \"#utility.yul\":4684:4690   */\n      dup5\n        /* \"#utility.yul\":4644:4711   */\n      tag_119\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4504:4718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4805:4904   */\n    tag_103:\n        /* \"#utility.yul\":4857:4863   */\n      0x00\n        /* \"#utility.yul\":4891:4896   */\n      dup2\n        /* \"#utility.yul\":4885:4897   */\n      mload\n        /* \"#utility.yul\":4875:4897   */\n      swap1\n      pop\n        /* \"#utility.yul\":4805:4904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4910:5079   */\n    tag_105:\n        /* \"#utility.yul\":4994:5005   */\n      0x00\n        /* \"#utility.yul\":5028:5034   */\n      dup3\n        /* \"#utility.yul\":5023:5026   */\n      dup3\n        /* \"#utility.yul\":5016:5035   */\n      mstore\n        /* \"#utility.yul\":5068:5072   */\n      0x20\n        /* \"#utility.yul\":5063:5066   */\n      dup3\n        /* \"#utility.yul\":5059:5073   */\n      add\n        /* \"#utility.yul\":5044:5073   */\n      swap1\n      pop\n        /* \"#utility.yul\":4910:5079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5085:5181   */\n    tag_137:\n        /* \"#utility.yul\":5122:5129   */\n      0x00\n        /* \"#utility.yul\":5151:5175   */\n      tag_139\n        /* \"#utility.yul\":5169:5174   */\n      dup3\n        /* \"#utility.yul\":5151:5175   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5140:5175   */\n      swap1\n      pop\n        /* \"#utility.yul\":5085:5181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5187:5277   */\n    tag_99:\n        /* \"#utility.yul\":5221:5228   */\n      0x00\n        /* \"#utility.yul\":5264:5269   */\n      dup2\n        /* \"#utility.yul\":5257:5270   */\n      iszero\n        /* \"#utility.yul\":5250:5271   */\n      iszero\n        /* \"#utility.yul\":5239:5271   */\n      swap1\n      pop\n        /* \"#utility.yul\":5187:5277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5283:5409   */\n    tag_140:\n        /* \"#utility.yul\":5320:5327   */\n      0x00\n        /* \"#utility.yul\":5360:5402   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5353:5358   */\n      dup3\n        /* \"#utility.yul\":5349:5403   */\n      and\n        /* \"#utility.yul\":5338:5403   */\n      swap1\n      pop\n        /* \"#utility.yul\":5283:5409   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5415:5492   */\n    tag_118:\n        /* \"#utility.yul\":5452:5459   */\n      0x00\n        /* \"#utility.yul\":5481:5486   */\n      dup2\n        /* \"#utility.yul\":5470:5486   */\n      swap1\n      pop\n        /* \"#utility.yul\":5415:5492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5498:5584   */\n    tag_122:\n        /* \"#utility.yul\":5533:5540   */\n      0x00\n        /* \"#utility.yul\":5573:5577   */\n      0xff\n        /* \"#utility.yul\":5566:5571   */\n      dup3\n        /* \"#utility.yul\":5562:5578   */\n      and\n        /* \"#utility.yul\":5551:5578   */\n      swap1\n      pop\n        /* \"#utility.yul\":5498:5584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5590:5897   */\n    tag_107:\n        /* \"#utility.yul\":5658:5659   */\n      0x00\n        /* \"#utility.yul\":5668:5781   */\n    tag_146:\n        /* \"#utility.yul\":5682:5688   */\n      dup4\n        /* \"#utility.yul\":5679:5680   */\n      dup2\n        /* \"#utility.yul\":5676:5689   */\n      lt\n        /* \"#utility.yul\":5668:5781   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":5767:5768   */\n      dup1\n        /* \"#utility.yul\":5762:5765   */\n      dup3\n        /* \"#utility.yul\":5758:5769   */\n      add\n        /* \"#utility.yul\":5752:5770   */\n      mload\n        /* \"#utility.yul\":5748:5749   */\n      dup2\n        /* \"#utility.yul\":5743:5746   */\n      dup5\n        /* \"#utility.yul\":5739:5750   */\n      add\n        /* \"#utility.yul\":5732:5771   */\n      mstore\n        /* \"#utility.yul\":5704:5706   */\n      0x20\n        /* \"#utility.yul\":5701:5702   */\n      dup2\n        /* \"#utility.yul\":5697:5707   */\n      add\n        /* \"#utility.yul\":5692:5707   */\n      swap1\n      pop\n        /* \"#utility.yul\":5668:5781   */\n      jump(tag_146)\n    tag_148:\n        /* \"#utility.yul\":5799:5805   */\n      dup4\n        /* \"#utility.yul\":5796:5797   */\n      dup2\n        /* \"#utility.yul\":5793:5806   */\n      gt\n        /* \"#utility.yul\":5790:5891   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":5879:5880   */\n      0x00\n        /* \"#utility.yul\":5870:5876   */\n      dup5\n        /* \"#utility.yul\":5865:5868   */\n      dup5\n        /* \"#utility.yul\":5861:5877   */\n      add\n        /* \"#utility.yul\":5854:5881   */\n      mstore\n        /* \"#utility.yul\":5790:5891   */\n    tag_149:\n        /* \"#utility.yul\":5639:5897   */\n      pop\n        /* \"#utility.yul\":5590:5897   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6026:6143   */\n    tag_78:\n        /* \"#utility.yul\":6135:6136   */\n      0x00\n        /* \"#utility.yul\":6132:6133   */\n      dup1\n        /* \"#utility.yul\":6125:6137   */\n      revert\n        /* \"#utility.yul\":6149:6251   */\n    tag_109:\n        /* \"#utility.yul\":6190:6196   */\n      0x00\n        /* \"#utility.yul\":6241:6243   */\n      0x1f\n        /* \"#utility.yul\":6237:6244   */\n      not\n        /* \"#utility.yul\":6232:6234   */\n      0x1f\n        /* \"#utility.yul\":6225:6230   */\n      dup4\n        /* \"#utility.yul\":6221:6235   */\n      add\n        /* \"#utility.yul\":6217:6245   */\n      and\n        /* \"#utility.yul\":6207:6245   */\n      swap1\n      pop\n        /* \"#utility.yul\":6149:6251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6257:6422   */\n    tag_114:\n        /* \"#utility.yul\":6397:6414   */\n      0x4e6f7420496d706c656d656e7465640000000000000000000000000000000000\n        /* \"#utility.yul\":6393:6394   */\n      0x00\n        /* \"#utility.yul\":6385:6391   */\n      dup3\n        /* \"#utility.yul\":6381:6395   */\n      add\n        /* \"#utility.yul\":6374:6415   */\n      mstore\n        /* \"#utility.yul\":6257:6422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6428:6550   */\n    tag_70:\n        /* \"#utility.yul\":6501:6525   */\n      tag_156\n        /* \"#utility.yul\":6519:6524   */\n      dup2\n        /* \"#utility.yul\":6501:6525   */\n      tag_137\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":6494:6499   */\n      dup2\n        /* \"#utility.yul\":6491:6526   */\n      eq\n        /* \"#utility.yul\":6481:6544   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":6540:6541   */\n      0x00\n        /* \"#utility.yul\":6537:6538   */\n      dup1\n        /* \"#utility.yul\":6530:6542   */\n      revert\n        /* \"#utility.yul\":6481:6544   */\n    tag_157:\n        /* \"#utility.yul\":6428:6550   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6556:6678   */\n    tag_74:\n        /* \"#utility.yul\":6629:6653   */\n      tag_159\n        /* \"#utility.yul\":6647:6652   */\n      dup2\n        /* \"#utility.yul\":6629:6653   */\n      tag_118\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6622:6627   */\n      dup2\n        /* \"#utility.yul\":6619:6654   */\n      eq\n        /* \"#utility.yul\":6609:6672   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":6668:6669   */\n      0x00\n        /* \"#utility.yul\":6665:6666   */\n      dup1\n        /* \"#utility.yul\":6658:6670   */\n      revert\n        /* \"#utility.yul\":6609:6672   */\n    tag_160:\n        /* \"#utility.yul\":6556:6678   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203a99c7e49c48995a4123691836e9dc1563105537c5f628259b92892964c702db64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_101": {
									"entryPoint": null,
									"id": 101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 56,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 77,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "660:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "776:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "677:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "800:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:43:2"
															},
															"nodeType": "YulIf",
															"src": "976:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "959:5:2",
														"type": ""
													}
												],
												"src": "923:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516108213803806108218339818101604052810190610032919061004d565b506100a0565b60008151905061004781610089565b92915050565b60006020828403121561006357610062610084565b5b600061007184828501610038565b91505092915050565b6000819050919050565b600080fd5b6100928161007a565b811461009d57600080fd5b50565b610772806100af6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906105b3565b60405180910390f35b6100d060048036038101906100cb91906104cf565b610239565b6040516100dd9190610598565b60405180910390f35b6100ee610276565b6040516100fb91906105f5565b60405180910390f35b61011e6004803603810190610119919061047c565b6102b3565b60405161012b9190610598565b60405180910390f35b61013c6102f0565b6040516101499190610610565b60405180910390f35b61016c6004803603810190610167919061040f565b6102f5565b60405161017991906105f5565b60405180910390f35b61018a610332565b60405161019791906105b3565b60405180910390f35b6101ba60048036038101906101b591906104cf565b61036b565b6040516101c79190610598565b60405180910390f35b6101ea60048036038101906101e5919061043c565b6103a8565b6040516101f791906105f5565b60405180910390f35b6040518060400160405280600b81526020017f576166666c65546f6b656e00000000000000000000000000000000000000000081525081565b60006040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d906105d5565b60405180910390fd5b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa906105d5565b60405180910390fd5b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e7906105d5565b60405180910390fd5b601281565b60006040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610329906105d5565b60405180910390fd5b6040518060400160405280600381526020017f57464c000000000000000000000000000000000000000000000000000000000081525081565b60006040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906105d5565b60405180910390fd5b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc906105d5565b60405180910390fd5b6000813590506103f48161070e565b92915050565b60008135905061040981610725565b92915050565b600060208284031215610425576104246106cf565b5b6000610433848285016103e5565b91505092915050565b60008060408385031215610453576104526106cf565b5b6000610461858286016103e5565b9250506020610472858286016103e5565b9150509250929050565b600080600060608486031215610495576104946106cf565b5b60006104a3868287016103e5565b93505060206104b4868287016103e5565b92505060406104c5868287016103fa565b9150509250925092565b600080604083850312156104e6576104e56106cf565b5b60006104f4858286016103e5565b9250506020610505858286016103fa565b9150509250929050565b61051881610659565b82525050565b60006105298261062b565b6105338185610636565b935061054381856020860161069c565b61054c816106d4565b840191505092915050565b6000610564600f83610636565b915061056f826106e5565b602082019050919050565b61058381610685565b82525050565b6105928161068f565b82525050565b60006020820190506105ad600083018461050f565b92915050565b600060208201905081810360008301526105cd818461051e565b905092915050565b600060208201905081810360008301526105ee81610557565b9050919050565b600060208201905061060a600083018461057a565b92915050565b60006020820190506106256000830184610589565b92915050565b600081519050919050565b600082825260208201905092915050565b600061065282610665565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156106ba57808201518184015260208101905061069f565b838111156106c9576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f4e6f7420496d706c656d656e7465640000000000000000000000000000000000600082015250565b61071781610647565b811461072257600080fd5b50565b61072e81610685565b811461073957600080fd5b5056fea26469706673582212203a99c7e49c48995a4123691836e9dc1563105537c5f628259b92892964c702db64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x821 CODESIZE SUB DUP1 PUSH2 0x821 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x4D JUMP JUMPDEST POP PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x47 DUP2 PUSH2 0x89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x63 JUMPI PUSH2 0x62 PUSH2 0x84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x71 DUP5 DUP3 DUP6 ADD PUSH2 0x38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92 DUP2 PUSH2 0x7A JUMP JUMPDEST DUP2 EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x772 DUP1 PUSH2 0xAF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x576166666C65546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E7 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x329 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57464C0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F4 DUP2 PUSH2 0x70E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x409 DUP2 PUSH2 0x725 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH2 0x424 PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x433 DUP5 DUP3 DUP6 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x453 JUMPI PUSH2 0x452 PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x461 DUP6 DUP3 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x472 DUP6 DUP3 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x495 JUMPI PUSH2 0x494 PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A3 DUP7 DUP3 DUP8 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4B4 DUP7 DUP3 DUP8 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4C5 DUP7 DUP3 DUP8 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4E6 JUMPI PUSH2 0x4E5 PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F4 DUP6 DUP3 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x505 DUP6 DUP3 DUP7 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x518 DUP2 PUSH2 0x659 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x529 DUP3 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x533 DUP2 DUP6 PUSH2 0x636 JUMP JUMPDEST SWAP4 POP PUSH2 0x543 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69C JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x6D4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x564 PUSH1 0xF DUP4 PUSH2 0x636 JUMP JUMPDEST SWAP2 POP PUSH2 0x56F DUP3 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x583 DUP2 PUSH2 0x685 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x68F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x50F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CD DUP2 DUP5 PUSH2 0x51E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5EE DUP2 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x60A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x625 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 DUP3 PUSH2 0x665 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420496D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x717 DUP2 PUSH2 0x647 JUMP JUMPDEST DUP2 EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x72E DUP2 PUSH2 0x685 JUMP JUMPDEST DUP2 EQ PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE SWAP10 0xC7 0xE4 SWAP13 BASEFEE SWAP10 GAS COINBASE 0x23 PUSH10 0x1836E9DC1563105537C5 0xF6 0x28 0x25 SWAP12 SWAP3 DUP10 0x29 PUSH5 0xC702DB6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "83:1081:1:-:0;;;294:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;83:1081;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:77::-;631:7;660:5;649:16;;594:77;;;:::o;800:117::-;909:1;906;899:12;923:122;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;83:1081:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance_155": {
									"entryPoint": 936,
									"id": 155,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_170": {
									"entryPoint": 569,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_125": {
									"entryPoint": 757,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_91": {
									"entryPoint": 752,
									"id": 91,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_85": {
									"entryPoint": 512,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_88": {
									"entryPoint": 818,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_112": {
									"entryPoint": 630,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_187": {
									"entryPoint": 691,
									"id": 187,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_140": {
									"entryPoint": 875,
									"id": 140,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6681:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:2"
															},
															"nodeType": "YulIf",
															"src": "373:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:2",
														"type": ""
													}
												],
												"src": "297:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:2"
															},
															"nodeType": "YulIf",
															"src": "725:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:2",
														"type": ""
													}
												],
												"src": "632:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:2"
															},
															"nodeType": "YulIf",
															"src": "1222:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:2",
														"type": ""
													}
												],
												"src": "1112:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:2"
															},
															"nodeType": "YulIf",
															"src": "1830:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:2",
														"type": ""
													}
												],
												"src": "1737:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:2",
														"type": ""
													}
												],
												"src": "2217:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:2",
														"type": ""
													}
												],
												"src": "2332:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:2",
														"type": ""
													}
												],
												"src": "2702:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3139:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3156:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3179:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3161:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3161:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3149:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3127:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3134:3:2",
														"type": ""
													}
												],
												"src": "3074:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3259:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3276:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3297:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "3281:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3281:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3269:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3247:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3254:3:2",
														"type": ""
													}
												],
												"src": "3198:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3408:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3418:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3430:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3441:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3418:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3492:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3505:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3516:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3501:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3501:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3454:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3380:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3392:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3403:4:2",
														"type": ""
													}
												],
												"src": "3316:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3650:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3660:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3672:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3660:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3707:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3718:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3726:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3732:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3722:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3722:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3696:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3752:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3833:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3760:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3760:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3752:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3622:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3634:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3645:4:2",
														"type": ""
													}
												],
												"src": "3532:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4022:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4032:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4044:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4032:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4079:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4090:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4075:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4075:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4098:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4104:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4094:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4094:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4068:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4068:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4124:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4258:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4132:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4124:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4002:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4017:4:2",
														"type": ""
													}
												],
												"src": "3851:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4374:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4384:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4396:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4392:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4384:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4464:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4477:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4488:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4473:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4473:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4420:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4420:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4346:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4358:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4369:4:2",
														"type": ""
													}
												],
												"src": "4276:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4608:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4620:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4616:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4608:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4684:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4708:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4693:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4693:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4644:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4644:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4644:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4570:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4582:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4593:4:2",
														"type": ""
													}
												],
												"src": "4504:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4764:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4774:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4784:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4784:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4774:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4757:6:2",
														"type": ""
													}
												],
												"src": "4724:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4864:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4875:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4891:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4885:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4875:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4847:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4857:6:2",
														"type": ""
													}
												],
												"src": "4805:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5006:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5023:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5028:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5016:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5016:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5016:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5044:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5063:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5044:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4978:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4983:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4994:11:2",
														"type": ""
													}
												],
												"src": "4910:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5130:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5140:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5169:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5151:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5151:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5140:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5112:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5122:7:2",
														"type": ""
													}
												],
												"src": "5085:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5229:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5239:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5264:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5257:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5250:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5239:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5211:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5221:7:2",
														"type": ""
													}
												],
												"src": "5187:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5328:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5338:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5353:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5360:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5349:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5338:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5310:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5320:7:2",
														"type": ""
													}
												],
												"src": "5283:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5460:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5470:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5481:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5470:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5442:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5452:7:2",
														"type": ""
													}
												],
												"src": "5415:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5541:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5551:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5566:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5573:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5562:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5562:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5551:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5523:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5533:7:2",
														"type": ""
													}
												],
												"src": "5498:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5639:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5649:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5658:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5653:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5718:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5743:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5748:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5739:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5739:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5762:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5767:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5758:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5758:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5752:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5752:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5732:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5732:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5732:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5679:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5682:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5676:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5676:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5690:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5692:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5701:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5704:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5697:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5697:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5692:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5672:3:2",
																"statements": []
															},
															"src": "5668:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5815:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5865:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5870:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5861:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5861:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5879:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5854:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5854:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5854:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5796:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5799:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5793:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5793:13:2"
															},
															"nodeType": "YulIf",
															"src": "5790:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5621:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5626:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5631:6:2",
														"type": ""
													}
												],
												"src": "5590:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5992:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6009:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6012:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6002:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6002:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6002:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5903:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6115:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6132:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6125:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6125:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6125:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6026:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6197:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6207:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6225:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6232:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6221:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6221:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6241:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6237:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6237:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6180:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6190:6:2",
														"type": ""
													}
												],
												"src": "6149:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6363:59:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6385:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6393:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6381:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6381:14:2"
																	},
																	{
																		"hexValue": "4e6f7420496d706c656d656e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6397:17:2",
																		"type": "",
																		"value": "Not Implemented"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6374:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6374:41:2"
														}
													]
												},
												"name": "store_literal_in_memory_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6355:6:2",
														"type": ""
													}
												],
												"src": "6257:165:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6471:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6537:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6540:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6530:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6530:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6494:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6519:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6501:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6501:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6491:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6491:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6484:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6484:43:2"
															},
															"nodeType": "YulIf",
															"src": "6481:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6464:5:2",
														"type": ""
													}
												],
												"src": "6428:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6599:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6656:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6665:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6668:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6658:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6658:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6658:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6622:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6647:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6629:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6629:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6619:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6619:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6612:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:43:2"
															},
															"nodeType": "YulIf",
															"src": "6609:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6592:5:2",
														"type": ""
													}
												],
												"src": "6556:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Implemented\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906105b3565b60405180910390f35b6100d060048036038101906100cb91906104cf565b610239565b6040516100dd9190610598565b60405180910390f35b6100ee610276565b6040516100fb91906105f5565b60405180910390f35b61011e6004803603810190610119919061047c565b6102b3565b60405161012b9190610598565b60405180910390f35b61013c6102f0565b6040516101499190610610565b60405180910390f35b61016c6004803603810190610167919061040f565b6102f5565b60405161017991906105f5565b60405180910390f35b61018a610332565b60405161019791906105b3565b60405180910390f35b6101ba60048036038101906101b591906104cf565b61036b565b6040516101c79190610598565b60405180910390f35b6101ea60048036038101906101e5919061043c565b6103a8565b6040516101f791906105f5565b60405180910390f35b6040518060400160405280600b81526020017f576166666c65546f6b656e00000000000000000000000000000000000000000081525081565b60006040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d906105d5565b60405180910390fd5b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa906105d5565b60405180910390fd5b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e7906105d5565b60405180910390fd5b601281565b60006040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610329906105d5565b60405180910390fd5b6040518060400160405280600381526020017f57464c000000000000000000000000000000000000000000000000000000000081525081565b60006040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906105d5565b60405180910390fd5b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc906105d5565b60405180910390fd5b6000813590506103f48161070e565b92915050565b60008135905061040981610725565b92915050565b600060208284031215610425576104246106cf565b5b6000610433848285016103e5565b91505092915050565b60008060408385031215610453576104526106cf565b5b6000610461858286016103e5565b9250506020610472858286016103e5565b9150509250929050565b600080600060608486031215610495576104946106cf565b5b60006104a3868287016103e5565b93505060206104b4868287016103e5565b92505060406104c5868287016103fa565b9150509250925092565b600080604083850312156104e6576104e56106cf565b5b60006104f4858286016103e5565b9250506020610505858286016103fa565b9150509250929050565b61051881610659565b82525050565b60006105298261062b565b6105338185610636565b935061054381856020860161069c565b61054c816106d4565b840191505092915050565b6000610564600f83610636565b915061056f826106e5565b602082019050919050565b61058381610685565b82525050565b6105928161068f565b82525050565b60006020820190506105ad600083018461050f565b92915050565b600060208201905081810360008301526105cd818461051e565b905092915050565b600060208201905081810360008301526105ee81610557565b9050919050565b600060208201905061060a600083018461057a565b92915050565b60006020820190506106256000830184610589565b92915050565b600081519050919050565b600082825260208201905092915050565b600061065282610665565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156106ba57808201518184015260208101905061069f565b838111156106c9576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f4e6f7420496d706c656d656e7465640000000000000000000000000000000000600082015250565b61071781610647565b811461072257600080fd5b50565b61072e81610685565b811461073957600080fd5b5056fea26469706673582212203a99c7e49c48995a4123691836e9dc1563105537c5f628259b92892964c702db64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x576166666C65546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E7 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x329 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57464C0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F4 DUP2 PUSH2 0x70E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x409 DUP2 PUSH2 0x725 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH2 0x424 PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x433 DUP5 DUP3 DUP6 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x453 JUMPI PUSH2 0x452 PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x461 DUP6 DUP3 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x472 DUP6 DUP3 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x495 JUMPI PUSH2 0x494 PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A3 DUP7 DUP3 DUP8 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4B4 DUP7 DUP3 DUP8 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4C5 DUP7 DUP3 DUP8 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4E6 JUMPI PUSH2 0x4E5 PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F4 DUP6 DUP3 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x505 DUP6 DUP3 DUP7 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x518 DUP2 PUSH2 0x659 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x529 DUP3 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x533 DUP2 DUP6 PUSH2 0x636 JUMP JUMPDEST SWAP4 POP PUSH2 0x543 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69C JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x6D4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x564 PUSH1 0xF DUP4 PUSH2 0x636 JUMP JUMPDEST SWAP2 POP PUSH2 0x56F DUP3 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x583 DUP2 PUSH2 0x685 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x68F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x50F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CD DUP2 DUP5 PUSH2 0x51E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5EE DUP2 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x60A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x625 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 DUP3 PUSH2 0x665 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420496D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x717 DUP2 PUSH2 0x647 JUMP JUMPDEST DUP2 EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x72E DUP2 PUSH2 0x685 JUMP JUMPDEST DUP2 EQ PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE SWAP10 0xC7 0xE4 SWAP13 BASEFEE SWAP10 GAS COINBASE 0x23 PUSH10 0x1836E9DC1563105537C5 0xF6 0x28 0x25 SWAP12 SWAP3 DUP10 0x29 PUSH5 0xC702DB6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "83:1081:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;120:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;882:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;342:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1013:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;212:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;169:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;579:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;120:43;;;;;;;;;;;;;;;;;;;:::o;882:125::-;959:4;975:25;;;;;;;;;;:::i;:::-;;;;;;;;342:106;397:7;416:25;;;;;;;;;;:::i;:::-;;;;;;;;1013:148;1113:4;1129:25;;;;;;;;;;:::i;:::-;;;;;;;;212:35;245:2;212:35;:::o;454:119::-;522:7;541:25;;;;;;;;;;:::i;:::-;;;;;;;;169:37;;;;;;;;;;;;;;;;;;;:::o;579:128::-;659:4;675:25;;;;;;;;;;:::i;:::-;;;;;;;;742:134;825:7;844:25;;;;;;;;;;:::i;:::-;;;;;;;;7:139:2;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:118::-;3161:24;3179:5;3161:24;:::i;:::-;3156:3;3149:37;3074:118;;:::o;3198:112::-;3281:22;3297:5;3281:22;:::i;:::-;3276:3;3269:35;3198:112;;:::o;3316:210::-;3403:4;3441:2;3430:9;3426:18;3418:26;;3454:65;3516:1;3505:9;3501:17;3492:6;3454:65;:::i;:::-;3316:210;;;;:::o;3532:313::-;3645:4;3683:2;3672:9;3668:18;3660:26;;3732:9;3726:4;3722:20;3718:1;3707:9;3703:17;3696:47;3760:78;3833:4;3824:6;3760:78;:::i;:::-;3752:86;;3532:313;;;;:::o;3851:419::-;4017:4;4055:2;4044:9;4040:18;4032:26;;4104:9;4098:4;4094:20;4090:1;4079:9;4075:17;4068:47;4132:131;4258:4;4132:131;:::i;:::-;4124:139;;3851:419;;;:::o;4276:222::-;4369:4;4407:2;4396:9;4392:18;4384:26;;4420:71;4488:1;4477:9;4473:17;4464:6;4420:71;:::i;:::-;4276:222;;;;:::o;4504:214::-;4593:4;4631:2;4620:9;4616:18;4608:26;;4644:67;4708:1;4697:9;4693:17;4684:6;4644:67;:::i;:::-;4504:214;;;;:::o;4805:99::-;4857:6;4891:5;4885:12;4875:22;;4805:99;;;:::o;4910:169::-;4994:11;5028:6;5023:3;5016:19;5068:4;5063:3;5059:14;5044:29;;4910:169;;;;:::o;5085:96::-;5122:7;5151:24;5169:5;5151:24;:::i;:::-;5140:35;;5085:96;;;:::o;5187:90::-;5221:7;5264:5;5257:13;5250:21;5239:32;;5187:90;;;:::o;5283:126::-;5320:7;5360:42;5353:5;5349:54;5338:65;;5283:126;;;:::o;5415:77::-;5452:7;5481:5;5470:16;;5415:77;;;:::o;5498:86::-;5533:7;5573:4;5566:5;5562:16;5551:27;;5498:86;;;:::o;5590:307::-;5658:1;5668:113;5682:6;5679:1;5676:13;5668:113;;;5767:1;5762:3;5758:11;5752:18;5748:1;5743:3;5739:11;5732:39;5704:2;5701:1;5697:10;5692:15;;5668:113;;;5799:6;5796:1;5793:13;5790:101;;;5879:1;5870:6;5865:3;5861:16;5854:27;5790:101;5639:258;5590:307;;;:::o;6026:117::-;6135:1;6132;6125:12;6149:102;6190:6;6241:2;6237:7;6232:2;6225:5;6221:14;6217:28;6207:38;;6149:102;;;:::o;6257:165::-;6397:17;6393:1;6385:6;6381:14;6374:41;6257:165;:::o;6428:122::-;6501:24;6519:5;6501:24;:::i;:::-;6494:5;6491:35;6481:63;;6540:1;6537;6530:12;6481:63;6428:122;:::o;6556:::-;6629:24;6647:5;6629:24;:::i;:::-;6622:5;6619:35;6609:63;;6668:1;6665;6658:12;6609:63;6556:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "381200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "940",
								"balanceOf(address)": "768",
								"decimals()": "335",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "482",
								"transfer(address,uint256)": "983",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 83,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 294,
									"end": 336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 336,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 665,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 899,
									"end": 911,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 1164,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a99c7e49c48995a4123691836e9dc1563105537c5f628259b92892964c702db64736f6c63430008070033",
									".code": [
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 1164,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 454,
											"end": 573,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 579,
											"end": 707,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "PUSH",
											"source": 1,
											"value": "576166666C65546F6B656E000000000000000000000000000000000000000000"
										},
										{
											"begin": 120,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 342,
											"end": 448,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 342,
											"end": 448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 441,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1013,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 245,
											"end": 247,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 212,
											"end": 247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 247,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 454,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 522,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 541,
											"end": 566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "57464C0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 169,
											"end": 206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 169,
											"end": 206,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 579,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 659,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 700,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 742,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 742,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 825,
											"end": 832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3192,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3074,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3179,
											"end": 3184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3161,
											"end": 3185,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3185,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3161,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3186,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3192,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3198,
											"end": 3310,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3198,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3297,
											"end": 3302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3281,
											"end": 3303,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3281,
											"end": 3303,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3281,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3304,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3310,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3310,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3310,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3316,
											"end": 3526,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3316,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3403,
											"end": 3407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3430,
											"end": 3439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3454,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3516,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3514,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3454,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3454,
											"end": 3519,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3454,
											"end": 3519,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3454,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3526,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3526,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3532,
											"end": 3845,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3532,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3681,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3730,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3716,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3743,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3833,
											"end": 3837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3845,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3845,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3845,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3845,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3845,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3851,
											"end": 4270,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3851,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4017,
											"end": 4021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4053,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4104,
											"end": 4113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4098,
											"end": 4102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4094,
											"end": 4114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4115,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4132,
											"end": 4263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4132,
											"end": 4263,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4132,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 4270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 4270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 4270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 4270,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4276,
											"end": 4498,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4276,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4369,
											"end": 4373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4486,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4473,
											"end": 4490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4464,
											"end": 4470,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4498,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4498,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4498,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4504,
											"end": 4718,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4504,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4633,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4644,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4708,
											"end": 4709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4690,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4644,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4644,
											"end": 4711,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4644,
											"end": 4711,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4644,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4718,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4718,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4805,
											"end": 4904,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4805,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4904,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4910,
											"end": 5079,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4910,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5023,
											"end": 5026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5016,
											"end": 5035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5068,
											"end": 5072,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5063,
											"end": 5066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5059,
											"end": 5073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 5073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 5073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 5079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 5079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 5079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 5079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 5079,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5085,
											"end": 5181,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5085,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5169,
											"end": 5174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5151,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5151,
											"end": 5175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5151,
											"end": 5175,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5151,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5085,
											"end": 5181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5085,
											"end": 5181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5085,
											"end": 5181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5085,
											"end": 5181,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5187,
											"end": 5277,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5187,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5221,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5239,
											"end": 5271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5239,
											"end": 5271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5187,
											"end": 5277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5187,
											"end": 5277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5187,
											"end": 5277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5187,
											"end": 5277,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5283,
											"end": 5409,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5283,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5320,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5360,
											"end": 5402,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5358,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5338,
											"end": 5403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5338,
											"end": 5403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5409,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5415,
											"end": 5492,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5415,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5452,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5492,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5498,
											"end": 5584,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5498,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5533,
											"end": 5540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5566,
											"end": 5571,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5562,
											"end": 5578,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5584,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5590,
											"end": 5897,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5590,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5689,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5767,
											"end": 5768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 5765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5743,
											"end": 5746,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5732,
											"end": 5771,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5701,
											"end": 5702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5707,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5692,
											"end": 5707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5692,
											"end": 5707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5668,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5806,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5790,
											"end": 5891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5790,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5790,
											"end": 5891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5865,
											"end": 5868,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 5881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5790,
											"end": 5891,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5790,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5897,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6026,
											"end": 6143,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6026,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6125,
											"end": 6137,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6251,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 6149,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6190,
											"end": 6196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6234,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6225,
											"end": 6230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6207,
											"end": 6245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6207,
											"end": 6245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6251,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6257,
											"end": 6422,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6257,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6397,
											"end": 6414,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420496D706C656D656E7465640000000000000000000000000000000000"
										},
										{
											"begin": 6393,
											"end": 6394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6415,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6422,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6428,
											"end": 6550,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 6428,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6501,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6519,
											"end": 6524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6501,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6501,
											"end": 6525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6501,
											"end": 6525,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6501,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6494,
											"end": 6499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6526,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 6538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6530,
											"end": 6542,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6550,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6556,
											"end": 6678,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6556,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6629,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6647,
											"end": 6652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6629,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6629,
											"end": 6653,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6629,
											"end": 6653,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6629,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6622,
											"end": 6627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6654,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6609,
											"end": 6672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6658,
											"end": 6670,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6672,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6609,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6678,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethers-waffle-workshops/contracts/WaffleToken.sol\":\"WaffleToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"ethers-waffle-workshops/contracts/WaffleToken.sol\":{\"keccak256\":\"0xe589011229f7f73a1693fd65d1b89e96debb1a143fc1524b406983312d1b9976\",\"urls\":[\"bzz-raw://5789d44c318754ec37239ec2306a4697110a1aa112ddc03a13045a74e3eaf975\",\"dweb:/ipfs/QmRdszrqu8VrS5Rv5S9Z1pKLFF1nH7yMuGeCfVvJmT2r2R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 95,
								"contract": "ethers-waffle-workshops/contracts/WaffleToken.sol:WaffleToken",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> ethers-waffle-workshops/contracts/WaffleToken.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:20:24:\n   |\n20 |     function balanceOf(address account) external view override returns (uint256) {\n   |                        ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 488,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 473
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:24:23:\n   |\n24 |     function transfer(address recipient, uint256 amount) external override returns (bool) {\n   |                       ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 614,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 597
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:24:42:\n   |\n24 |     function transfer(address recipient, uint256 amount) external override returns (bool) {\n   |                                          ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 630,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 616
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:32:24:\n   |\n32 |     function allowance(address owner, address spender) external override view returns (uint256) {\n   |                        ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 774,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 761
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:32:39:\n   |\n32 |     function allowance(address owner, address spender) external override view returns (uint256) {\n   |                                       ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 791,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 776
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:36:22:\n   |\n36 |     function approve(address spender, uint256 amount) external override returns (bool) {\n   |                      ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 914,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 899
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:36:39:\n   |\n36 |     function approve(address spender, uint256 amount) external override returns (bool) {\n   |                                       ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 930,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 916
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:40:27:\n   |\n40 |     function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n   |                           ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1049,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 1035
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:40:43:\n   |\n40 |     function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n   |                                           ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1068,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 1051
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:40:62:\n   |\n40 |     function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n   |                                                              ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1084,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 1070
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:16:5:\n   |\n16 |     function totalSupply() external view override returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 448,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 342
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:20:5:\n   |\n20 |     function balanceOf(address account) external view override returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 573,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 454
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:24:5:\n   |\n24 |     function transfer(address recipient, uint256 amount) external override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 707,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 579
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:32:5:\n   |\n32 |     function allowance(address owner, address spender) external override view returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 876,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 742
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:36:5:\n   |\n36 |     function approve(address spender, uint256 amount) external override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1007,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 882
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> ethers-waffle-workshops/contracts/WaffleToken.sol:40:5:\n   |\n40 |     function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1161,
					"file": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"start": 1013
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:0"
									},
									"scope": 77,
									"src": "296:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:0"
									},
									"scope": 77,
									"src": "434:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "733:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "745:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "779:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:0"
									},
									"scope": 77,
									"src": "715:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1079:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1094:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:0"
									},
									"scope": 77,
									"src": "1060:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1864:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:0"
									},
									"scope": 77,
									"src": "1796:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2241:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2280:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:0"
									},
									"scope": 77,
									"src": "2168:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2461:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2470:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2492:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:0"
									},
									"src": "2455:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2692:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2701:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2724:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2749:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:0"
									},
									"src": "2686:78:0"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"ethers-waffle-workshops/contracts/WaffleToken.sol": {
				"ast": {
					"absolutePath": "ethers-waffle-workshops/contracts/WaffleToken.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"WaffleToken": [
							188
						]
					},
					"id": 189,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 189,
							"sourceUnit": 78,
							"src": "25:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 81,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "107:6:1"
									},
									"id": 82,
									"nodeType": "InheritanceSpecifier",
									"src": "107:6:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 188,
							"linearizedBaseContracts": [
								188,
								77
							],
							"name": "WaffleToken",
							"nameLocation": "92:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 85,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "143:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 188,
									"src": "120:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 83,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "120:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "576166666c65546f6b656e",
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "150:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9f77fa473ac73b7d8e76f895ec9d01c770fb6cd8398fadcab4c5613150244747",
											"typeString": "literal_string \"WaffleToken\""
										},
										"value": "WaffleToken"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 88,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "192:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 188,
									"src": "169:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 86,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "169:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "57464c",
										"id": 87,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "201:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9452f9d3cf054b3d2c2930d36e45c182134441a15273d6d2a39e0407038eb022",
											"typeString": "literal_string \"WFL\""
										},
										"value": "WFL"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 91,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "234:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 188,
									"src": "212:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 89,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "212:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 90,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "245:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "279:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 188,
									"src": "254:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 94,
										"keyType": {
											"id": 92,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "262:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "254:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 93,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "273:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "328:8:1",
										"statements": []
									},
									"id": 101,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_initialBalance",
												"nameLocation": "311:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "306:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "306:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:22:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:0:1"
									},
									"scope": 188,
									"src": "294:42:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "406:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f7420496d706c656d656e746564",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "423:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															},
															"value": "Not Implemented"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															}
														],
														"id": 107,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "416:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "416:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "416:25:1"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "351:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "379:8:1"
									},
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:2:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:9:1"
									},
									"scope": 188,
									"src": "342:106:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "531:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f7420496d706c656d656e746564",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "548:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															},
															"value": "Not Implemented"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															}
														],
														"id": 120,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "541:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "541:25:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "463:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 116,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "504:8:1"
									},
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "522:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:9:1"
									},
									"scope": 188,
									"src": "454:119:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "665:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f7420496d706c656d656e746564",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "682:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															},
															"value": "Not Implemented"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															}
														],
														"id": 135,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "675:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "675:25:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "588:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 131,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "641:8:1"
									},
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "605:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "597:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "624:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "616:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:35:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "659:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "659:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:6:1"
									},
									"scope": 188,
									"src": "579:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "834:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f7420496d706c656d656e746564",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "851:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															},
															"value": "Not Implemented"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															}
														],
														"id": 150,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "844:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "844:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "844:25:1"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "751:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 146,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "802:8:1"
									},
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "769:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "761:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "784:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "776:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:32:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "825:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:9:1"
									},
									"scope": 188,
									"src": "742:134:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "965:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f7420496d706c656d656e746564",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "982:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															},
															"value": "Not Implemented"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															}
														],
														"id": 165,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "975:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "975:25:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "891:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "941:8:1"
									},
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "907:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "899:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "924:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "916:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:33:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "959:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "959:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:6:1"
									},
									"scope": 188,
									"src": "882:125:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1119:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f7420496d706c656d656e746564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1136:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															},
															"value": "Not Implemented"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1a15a657eb93d30e6a4d715c83e9470991853f7e57b97f4e4634b26f2428171c",
																"typeString": "literal_string \"Not Implemented\""
															}
														],
														"id": 182,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "1129:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1129:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "1129:25:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1022:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 178,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1095:8:1"
									},
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1043:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1035:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1059:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1051:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1078:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1070:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:51:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1113:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1113:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:6:1"
									},
									"scope": 188,
									"src": "1013:148:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 189,
							"src": "83:1081:1",
							"usedErrors": []
						}
					],
					"src": "0:1165:1"
				},
				"id": 1
			}
		}
	}
}